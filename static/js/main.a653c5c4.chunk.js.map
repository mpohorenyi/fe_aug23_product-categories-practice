{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","SORT_TYPE","UP","DOWN","products","categoryId","map","product","category","categoriesFromServer","find","group","user","usersFromServer","sortOptions","uuidv4","getSortedProducts","product1","product2","sortType","key","localeCompare","App","useState","searchedProduct","sortingOptions","sortingColumn","sortProducts","setSortProducts","visibleProducts","items","preparedProducts","filter","normalizedSearchedProduct","trim","toLowerCase","includes","length","sort","a","b","getPreparedProducts","updateSortProductsKey","newValue","currentSortProducts","updateProducts","Array","value","className","href","cn","onClick","type","placeholder","onChange","event","currentTarget","sortOption","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a653c5c4.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport { v4 as uuidv4 } from 'uuid';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst SORT_TYPE = {\n  UP: 'ASC',\n  DOWN: 'DESC',\n};\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(group => group.id === product.categoryId) || null;\n\n  return ({\n    ...product,\n    category,\n    user: usersFromServer\n      .find(user => user.id === category.ownerId) || null,\n  });\n});\n\nconst sortOptions = [\n  { id: uuidv4(), name: 'ID' },\n  { id: uuidv4(), name: 'Product' },\n  { id: uuidv4(), name: 'Category' },\n  { id: uuidv4(), name: 'User' },\n];\n\nfunction getPreparedProducts(\n  items,\n  {\n    user,\n    searchedProduct,\n    category,\n    sortingOptions: { sortType, sortingColumn },\n  },\n) {\n  let preparedProducts = [...items];\n\n  if (user) {\n    preparedProducts = preparedProducts\n      .filter(product => product.user.id === user);\n  }\n\n  if (searchedProduct) {\n    const normalizedSearchedProduct = searchedProduct.trim().toLowerCase();\n\n    preparedProducts = preparedProducts\n      .filter(product => product.name\n        .toLowerCase().includes(normalizedSearchedProduct));\n  }\n\n  if (category.length !== 0) {\n    preparedProducts = preparedProducts\n      .filter(product => category.includes(product.categoryId));\n  }\n\n  if (sortingColumn) {\n    preparedProducts = preparedProducts.sort((a, b) => {\n      switch (sortingColumn) {\n        case 'ID':\n          return getSortedProducts(a, b, sortType, 'id');\n\n        case 'Product':\n          return getSortedProducts(a, b, sortType, 'name');\n\n        case 'Category':\n          return getSortedProducts(a.category, b.category, sortType, 'title');\n\n        case 'User':\n          return getSortedProducts(a.user, b.user, sortType, 'name');\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedProducts;\n}\n\nfunction getSortedProducts(product1, product2, sortType, key) {\n  if (sortType === SORT_TYPE.UP) {\n    return typeof product1[key] === 'number'\n      ? product1[key] - product2[key]\n      : product1[key].localeCompare(product2[key]);\n  }\n\n  if (sortType === SORT_TYPE.DOWN) {\n    return typeof product1[key] === 'number'\n      ? product2[key] - product1[key]\n      : product2[key].localeCompare(product1[key]);\n  }\n\n  return 0;\n}\n\nexport const App = () => {\n  const [sortProducts, setSortProducts] = useState({\n    user: null,\n    searchedProduct: null,\n    category: [],\n    sortingOptions: {\n      sortType: null,\n      sortingColumn: null,\n    },\n  });\n  const visibleProducts = getPreparedProducts(products, sortProducts);\n\n  const updateSortProductsKey = (key, newValue) => {\n    setSortProducts((currentSortProducts) => {\n      const updateProducts = { ...currentSortProducts };\n\n      if (key === 'category' && !(newValue instanceof Array)) {\n        updateProducts[key] = updateProducts[key].includes(newValue)\n          ? updateProducts[key].filter(value => value !== newValue)\n          : [...updateProducts[key], newValue];\n\n        return updateProducts;\n      }\n\n      if (key === 'sortingOptions') {\n        const isColumnChange = updateProducts[key].sortingColumn !== newValue\n          && updateProducts[key].sortingColumn !== null;\n\n        if (isColumnChange) {\n          updateProducts[key].sortType = null;\n        }\n\n        if (updateProducts[key].sortType === null) {\n          updateProducts[key].sortType = SORT_TYPE.UP;\n        } else if (updateProducts[key].sortType === SORT_TYPE.UP) {\n          updateProducts[key].sortType = SORT_TYPE.DOWN;\n        } else {\n          updateProducts[key].sortType = null;\n        }\n\n        updateProducts[key].sortingColumn = newValue;\n\n        return updateProducts;\n      }\n\n      updateProducts[key] = newValue;\n\n      return updateProducts;\n    });\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({\n                  'is-active': !sortProducts.user,\n                })}\n                onClick={() => updateSortProductsKey('user', null)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  key={user.id}\n                  className={cn({\n                    'is-active': user.id === sortProducts.user,\n                  })}\n                  onClick={() => updateSortProductsKey('user', user.id)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={sortProducts.searchedProduct || ''}\n                  onChange={event => updateSortProductsKey(\n                    'searchedProduct', event.currentTarget.value,\n                  )}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                <span className=\"icon is-right\">\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  {sortProducts.searchedProduct && (\n                    <button\n                      data-cy=\"ClearButton\"\n                      id=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => {\n                        updateSortProductsKey('searchedProduct', null);\n                      }}\n                    />\n                  )}\n                </span>\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={cn('button is-success mr-6', {\n                  'is-outlined': sortProducts.category.length,\n                })}\n                onClick={() => updateSortProductsKey('category', [])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  data-cy=\"Category\"\n                  className={cn('button mr-2 my-1', {\n                    'is-info': sortProducts.category.includes(category.id),\n                  })}\n                  href=\"#/\"\n                  onClick={() => updateSortProductsKey('category', category.id)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => setSortProducts({\n                  user: null,\n                  searchedProduct: null,\n                  category: [],\n                  sortingOptions: {\n                    sortType: null,\n                    sortingColumn: null,\n                  },\n                })}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length === 0\n            ? (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )\n            : (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    {sortOptions.map(sortOption => (\n                      <th key={sortOption.id}>\n                        <span className=\"is-flex is-flex-wrap-nowrap\">\n                          {sortOption.name}\n\n                          <a\n                            href=\"#/\"\n                            onClick={() => updateSortProductsKey(\n                              'sortingOptions', sortOption.name,\n                            )}\n                          >\n                            <span className=\"icon\">\n                              <i\n                                data-cy=\"SortIcon\"\n                                className={cn('fas', {\n                                  'fa-sort': sortProducts\n                                    .sortingOptions.sortType === null\n                                    || sortProducts.sortingOptions\n                                      .sortingColumn !== sortOption.name,\n                                  'fa-sort-up': sortProducts\n                                    .sortingOptions.sortType === SORT_TYPE.UP\n                                    && sortProducts.sortingOptions\n                                      .sortingColumn === sortOption.name,\n                                  'fa-sort-down': sortProducts\n                                    .sortingOptions.sortType === SORT_TYPE.DOWN\n                                    && sortProducts.sortingOptions\n                                      .sortingColumn === sortOption.name,\n                                })}\n                              />\n                            </span>\n                          </a>\n                        </span>\n                      </th>\n                    ))}\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {visibleProducts.map(product => (\n                    <tr\n                      data-cy=\"Product\"\n                      key={product.id}\n                    >\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">\n                        {product.name}\n                      </td>\n                      <td data-cy=\"ProductCategory\">\n                        {`${product.category.icon} - ${product.category.title}`}\n                      </td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={cn({\n                          'has-text-link': product.user.sex === 'm',\n                          'has-text-danger': product.user.sex === 'f',\n                        })}\n                      >\n                        {product.user.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}