{"version":3,"sources":["api/users.js","api/categories.js","variables.jsx","api/products.js","helpers.jsx","components/FiltrationSection/FilterByUsers/FilterByUsers.jsx","components/FiltrationSection/SearchByProduct/SearchByProduct.jsx","components/FiltrationSection/FilterByCategories/FilterByCategories.jsx","components/FiltrationSection/ResetButton/ResetButton.jsx","components/FiltrationSection/FiltrationSection.jsx","components/ProductsTable/TableHead/TableHead.jsx","components/ProductsTable/TableBody/TableBody.jsx","components/ProductsTable/ProductsTable.jsx","App.jsx","index.jsx"],"names":["id","name","sex","title","icon","ownerId","SORT_TYPE","UP","DOWN","products","categoryId","map","product","category","categoriesFromServer","find","group","user","usersFromServer","sortOptions","uuidv4","getSortedProducts","product1","product2","sortType","key","localeCompare","FilterByUsers","sortProducts","updateSortProductsKey","className","href","cn","onClick","SearchByProduct","type","placeholder","value","searchedProduct","onChange","event","currentTarget","FilterByCategories","length","includes","ResetButton","setSortProducts","sortingOptions","sortingColumn","FiltrationSection","TableHead","sortOption","TableBody","ProductsTable","visibleProducts","App","useState","items","preparedProducts","filter","normalizedSearchedProduct","trim","toLowerCase","sort","a","b","getPreparedProducts","newValue","currentSortProducts","updateProducts","Array","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9acee2c.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import { v4 as uuidv4 } from 'uuid';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nexport const SORT_TYPE = {\n  UP: 'ASC',\n  DOWN: 'DESC',\n};\n\nexport const products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(group => group.id === product.categoryId) || null;\n\n  return ({\n    ...product,\n    category,\n    user: usersFromServer\n      .find(user => user.id === category.ownerId) || null,\n  });\n});\n\nexport const sortOptions = [\n  { id: uuidv4(), name: 'ID' },\n  { id: uuidv4(), name: 'Product' },\n  { id: uuidv4(), name: 'Category' },\n  { id: uuidv4(), name: 'User' },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import { SORT_TYPE } from './variables';\n\nexport function getPreparedProducts(\n  items,\n  {\n    user,\n    searchedProduct,\n    category,\n    sortingOptions: { sortType, sortingColumn },\n  },\n) {\n  let preparedProducts = [...items];\n\n  if (user) {\n    preparedProducts = preparedProducts\n      .filter(product => product.user.id === user);\n  }\n\n  if (searchedProduct) {\n    const normalizedSearchedProduct = searchedProduct.trim().toLowerCase();\n\n    preparedProducts = preparedProducts\n      .filter(product => product.name\n        .toLowerCase().includes(normalizedSearchedProduct));\n  }\n\n  if (category.length !== 0) {\n    preparedProducts = preparedProducts\n      .filter(product => category.includes(product.categoryId));\n  }\n\n  if (sortingColumn) {\n    preparedProducts = preparedProducts.sort((a, b) => {\n      switch (sortingColumn) {\n        case 'ID':\n          return getSortedProducts(a, b, sortType, 'id');\n\n        case 'Product':\n          return getSortedProducts(a, b, sortType, 'name');\n\n        case 'Category':\n          return getSortedProducts(a.category, b.category, sortType, 'title');\n\n        case 'User':\n          return getSortedProducts(a.user, b.user, sortType, 'name');\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedProducts;\n}\n\nfunction getSortedProducts(product1, product2, sortType, key) {\n  if (sortType === SORT_TYPE.UP) {\n    return typeof product1[key] === 'number'\n      ? product1[key] - product2[key]\n      : product1[key].localeCompare(product2[key]);\n  }\n\n  if (sortType === SORT_TYPE.DOWN) {\n    return typeof product1[key] === 'number'\n      ? product2[key] - product1[key]\n      : product2[key].localeCompare(product1[key]);\n  }\n\n  return 0;\n}\n","import cn from 'classnames';\n\nimport usersFromServer from '../../../api/users';\n\nexport const FilterByUsers = ({ sortProducts, updateSortProductsKey }) => (\n  <p className=\"panel-tabs has-text-weight-bold\">\n    <a\n      data-cy=\"FilterAllUsers\"\n      href=\"#/\"\n      className={cn({\n        'is-active': !sortProducts.user,\n      })}\n      onClick={() => updateSortProductsKey('user', null)}\n    >\n      All\n    </a>\n\n    {usersFromServer.map(user => (\n      <a\n        data-cy=\"FilterUser\"\n        href=\"#/\"\n        key={user.id}\n        className={cn({\n          'is-active': user.id === sortProducts.user,\n        })}\n        onClick={() => updateSortProductsKey('user', user.id)}\n      >\n        {user.name}\n      </a>\n    ))}\n  </p>\n);\n","export const SearchByProduct = ({ sortProducts, updateSortProductsKey }) => (\n  <div className=\"panel-block\">\n    <p className=\"control has-icons-left has-icons-right\">\n      <input\n        data-cy=\"SearchField\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search\"\n        value={sortProducts.searchedProduct || ''}\n        onChange={event => updateSortProductsKey(\n          'searchedProduct', event.currentTarget.value,\n        )}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-search\" aria-hidden=\"true\" />\n      </span>\n\n      <span className=\"icon is-right\">\n        {sortProducts.searchedProduct && (\n          <button\n            data-cy=\"ClearButton\"\n            id=\"ClearButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              updateSortProductsKey('searchedProduct', null);\n            }}\n          />\n        )}\n      </span>\n    </p>\n  </div>\n);\n","import cn from 'classnames';\n\nimport categoriesFromServer from '../../../api/categories';\n\nexport const FilterByCategories = ({ sortProducts, updateSortProductsKey }) => (\n  <div className=\"panel-block is-flex-wrap-wrap\">\n    <a\n      href=\"#/\"\n      data-cy=\"AllCategories\"\n      className={cn('button is-success mr-6', {\n        'is-outlined': sortProducts.category.length,\n      })}\n      onClick={() => updateSortProductsKey('category', [])}\n    >\n      All\n    </a>\n\n    {categoriesFromServer.map(category => (\n      <a\n        data-cy=\"Category\"\n        className={cn('button mr-2 my-1', {\n          'is-info': sortProducts.category.includes(category.id),\n        })}\n        href=\"#/\"\n        onClick={() => updateSortProductsKey('category', category.id)}\n      >\n        {category.title}\n      </a>\n    ))}\n  </div>\n);\n","export const ResetButton = ({ setSortProducts }) => (\n  <div className=\"panel-block\">\n    <a\n      data-cy=\"ResetAllButton\"\n      href=\"#/\"\n      className=\"button is-link is-outlined is-fullwidth\"\n      onClick={() => setSortProducts({\n        user: null,\n        searchedProduct: null,\n        category: [],\n        sortingOptions: {\n          sortType: null,\n          sortingColumn: null,\n        },\n      })}\n    >\n      Reset all filters\n    </a>\n  </div>\n);\n","import { FilterByUsers } from './FilterByUsers/FilterByUsers';\nimport { SearchByProduct } from './SearchByProduct/SearchByProduct';\nimport { FilterByCategories } from './FilterByCategories/FilterByCategories';\nimport { ResetButton } from './ResetButton/ResetButton';\n\nexport const FiltrationSection = ({\n  sortProducts,\n  updateSortProductsKey,\n  setSortProducts,\n}) => (\n  <div className=\"block\">\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <FilterByUsers\n        sortProducts={sortProducts}\n        updateSortProductsKey={updateSortProductsKey}\n      />\n\n      <SearchByProduct\n        sortProducts={sortProducts}\n        updateSortProductsKey={updateSortProductsKey}\n      />\n\n      <FilterByCategories\n        sortProducts={sortProducts}\n        updateSortProductsKey={updateSortProductsKey}\n      />\n\n      <ResetButton setSortProducts={setSortProducts} />\n    </nav>\n  </div>\n);\n","import cn from 'classnames';\n\nimport { SORT_TYPE } from '../../../variables';\n\nexport const TableHead = ({\n  sortOption,\n  sortProducts,\n  updateSortProductsKey,\n}) => (\n  <th>\n    <span className=\"is-flex is-flex-wrap-nowrap\">\n      {sortOption.name}\n\n      <a\n        href=\"#/\"\n        onClick={() => updateSortProductsKey(\n          'sortingOptions', sortOption.name,\n        )}\n      >\n        <span className=\"icon\">\n          <i\n            data-cy=\"SortIcon\"\n            className={cn('fas', {\n              'fa-sort': sortProducts\n                .sortingOptions.sortType === null\n                || sortProducts.sortingOptions\n                  .sortingColumn !== sortOption.name,\n              'fa-sort-up': sortProducts\n                .sortingOptions.sortType === SORT_TYPE.UP\n                && sortProducts.sortingOptions\n                  .sortingColumn === sortOption.name,\n              'fa-sort-down': sortProducts\n                .sortingOptions.sortType === SORT_TYPE.DOWN\n                && sortProducts.sortingOptions\n                  .sortingColumn === sortOption.name,\n            })}\n          />\n        </span>\n      </a>\n    </span>\n  </th>\n);\n","import cn from 'classnames';\n\nexport const TableBody = ({ product }) => (\n  <tr data-cy=\"Product\">\n    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n      {product.id}\n    </td>\n\n    <td data-cy=\"ProductName\">\n      {product.name}\n    </td>\n    <td data-cy=\"ProductCategory\">\n      {`${product.category.icon} - ${product.category.title}`}\n    </td>\n\n    <td\n      data-cy=\"ProductUser\"\n      className={cn({\n        'has-text-link': product.user.sex === 'm',\n        'has-text-danger': product.user.sex === 'f',\n      })}\n    >\n      {product.user.name}\n    </td>\n  </tr>\n);\n","import { sortOptions } from '../../variables';\nimport { TableHead } from './TableHead/TableHead';\nimport { TableBody } from './TableBody/TableBody';\n\nexport const ProductsTable = ({\n  visibleProducts,\n  sortProducts,\n  updateSortProductsKey,\n}) => (\n  <div className=\"box table-container\">\n    {visibleProducts.length === 0\n      ? (\n        <p data-cy=\"NoMatchingMessage\">\n          No products matching selected criteria\n        </p>\n      )\n      : (\n        <table\n          data-cy=\"ProductTable\"\n          className=\"table is-striped is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              {sortOptions.map(sortOption => (\n                <TableHead\n                  key={sortOption.id}\n                  sortOption={sortOption}\n                  sortProducts={sortProducts}\n                  updateSortProductsKey={updateSortProductsKey}\n                />\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleProducts.map(product => (\n              <TableBody product={product} />\n            ))}\n          </tbody>\n        </table>\n      )\n    }\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { SORT_TYPE, products } from './variables';\nimport { getPreparedProducts } from './helpers';\n\n// eslint-disable-next-line max-len\nimport { FiltrationSection } from './components/FiltrationSection/FiltrationSection';\nimport { ProductsTable } from './components/ProductsTable/ProductsTable';\n\nexport const App = () => {\n  const [sortProducts, setSortProducts] = useState({\n    user: null,\n    searchedProduct: null,\n    category: [],\n    sortingOptions: {\n      sortType: null,\n      sortingColumn: null,\n    },\n  });\n  const visibleProducts = getPreparedProducts(products, sortProducts);\n\n  const updateSortProductsKey = (key, newValue) => {\n    setSortProducts((currentSortProducts) => {\n      const updateProducts = { ...currentSortProducts };\n\n      if (key === 'category' && !(newValue instanceof Array)) {\n        updateProducts[key] = updateProducts[key].includes(newValue)\n          ? updateProducts[key].filter(value => value !== newValue)\n          : [...updateProducts[key], newValue];\n\n        return updateProducts;\n      }\n\n      if (key === 'sortingOptions') {\n        const isColumnChange = updateProducts[key].sortingColumn !== newValue\n          && updateProducts[key].sortingColumn !== null;\n\n        if (isColumnChange) {\n          updateProducts[key].sortType = null;\n        }\n\n        if (updateProducts[key].sortType === null) {\n          updateProducts[key].sortType = SORT_TYPE.UP;\n        } else if (updateProducts[key].sortType === SORT_TYPE.UP) {\n          updateProducts[key].sortType = SORT_TYPE.DOWN;\n        } else {\n          updateProducts[key].sortType = null;\n        }\n\n        updateProducts[key].sortingColumn = newValue;\n\n        return updateProducts;\n      }\n\n      updateProducts[key] = newValue;\n\n      return updateProducts;\n    });\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <FiltrationSection\n          visibleProducts={visibleProducts}\n          sortProducts={sortProducts}\n          updateSortProductsKey={updateSortProductsKey}\n          setSortProducts={setSortProducts}\n        />\n\n        <ProductsTable\n          visibleProducts={visibleProducts}\n          sortProducts={sortProducts}\n          updateSortProductsKey={updateSortProductsKey}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}